#!/bin/bash

GOBUILD_ROOT="__GOBUILD_ROOT__"
GOBUILD_BIN="__GOBUILD_BIN__"
cd $GOBUILD_ROOT

GO_REPO_URI="https://go.googlecode.com/hg/"
GO_REPO_DIR="${GOBUILD_ROOT}/golang"

init() {
    if [ "${1}" = "help" ]; then
        init_usage
    fi
    
    if [ ! -d "${GO_REPO_DIR}" ]; then
        hg clone $GO_REPO_URI $GO_REPO_DIR
    else
        echo "aleady initialized"
        exit 1
    fi
}

check_init() {
    if [ ! -d "${GO_REPO_DIR}" ]; then
        echo "First of all, run go-build init"
        exit 1
    fi
}

install() {
    _VERSION="${1}"
    _DIR="${2}"

    if [ "${_VERSION}" = "help" ]; then
        install_usage
    fi

    [ ! -d "${_DIR}" ] && mkdir -p ${_DIR}

    cd $GO_REPO_DIR
    hg update $_VERSION
    cd ./src

    export GOROOT=$_DIR
    export GOBIN="${_DIR}/bin"

    echo "Installing ${_VERSION}..."
    echo
    
    ./make.bash
}

versions() {
    _OPT="${1}"

    if [ "${_OPT}" = "help" ]; then
        versions_usage
    fi
    
    cd $GO_REPO_DIR
    if [ "${_OPT}" = "all" ]; then
        hg tags | awk '{print $1}'
    else
        hg tags | awk '{print $1}' | grep ^go
    fi
}

upgrade() {
    _OPT="${1}"

    case "${_OPT}" in
        help)
            upgrade_usage
            ;;
        repo)
            cd $GO_REPO_DIR
            hg pull
            ;;
        self)
            cd $GOBUILD_ROOT
            git pull
            export GOBUILD_ROOT
            export GOBUILD_BIN
            cat install-go-build | bash
            ;;
        *)
            echo "Command not found : ${_OPT}"
            exit 1
            ;;
    esac
}

usage() {
    echo "Usage: $(basename $0)

Options:
    init     initialize go-build
    install  install go
    versions display versions
    upgrade  upgrade go repository and go-build
"
    exit 1
}

init_usage() {
            echo "Usage: $(basename $0) init

Execute hg pull ${GO_REPO_URI}

Options:
    help Show this help message
"
    exit 1
}

install_usage() {
    echo "Usage: $(basename $0) install VERSION INSTALL_PATH

Install go 

VERSION      go version
INSTALL_PATH path to install dir

Options:
    help Show this help message
"
    exit 1
}

versions_usage() {
    echo "Usage: $(basename $0) versions [all]

Show go versions

Options:
    help Show this help message
    all  Show all versions
"
    exit 1
}

upgrade_usage() {
            echo "Usage: $(basename $0) upgrade

Upgrade go repo and go-build

Options:
    help Show this help message
    repo Upgrade go repo
    self Upgrade go-build
"
    exit 1
}

case "${1}" in
    init)
        init "${2}"
        ;;
    install)
        check_init
        install "${2}" "${3}"
        ;;
    versions)
        check_init
        versions "${2}"
        ;;
    upgrade)
        check_init
        upgrade "${2}"
        ;;
    *)
        usage
        ;;
esac
